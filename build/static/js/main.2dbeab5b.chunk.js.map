{"version":3,"sources":["Components/Layouts/spinner2.gif","logo.svg","Components/Layouts/Navbar.js","Context.js","Components/Layouts/Spinner.js","Components/tracks/Track.js","Components/tracks/Tracks.js","Components/Layouts/Index.js","Components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","track_list","heading","inherits","createClass","key","value","_this2","axios","get","process","then","res","setState","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","spinner","alt","style","width","margin","display","Track","track","color","artist_name","track_name","album_name","react_router_dom","to","track_id","Tracks","undefined","Fragment","map","item","tracks_Track","Index","Tracks_Tracks","Lyrics","lyrics","match","params","id","_this$state","keys","classNAme","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","dist_default","format","first_release_date","App","Context_Provider","Layouts_Navbar","href","target","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2dbeab5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner2.6689dc33.gif\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react' ;\n\nconst Navbar = () => {\n    return(\n        <nav className=\"navbar navbar-dark bg-dark mb-5\">\n\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">Lyric Finder</span>\n\n        </nav>\n    );\n};\nexport default Navbar;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context=React.createContext();\n\nexport class Provider extends Component{\n\n    state={\n        track_list:[],\n        heading:'Top 10 tracks'\n\n    }\n\n    componentDidMount(){\n        axios\n        .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=in&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`)\n        .then(res => {\n            //onsole.log(res.data);\n            this.setState({track_list:res.data.message.body.track_list});             \n        })\n        .catch(err =>console.log(err));\n\n    }\n\n\n    render(){\n        return(\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer=Context.Consumer;","import React from 'react';\nimport spinner from './spinner2.gif';\n\nexport default()=>{\n    return(\n        <div>\n        <img src={spinner} alt=\"Loading...\" style={{width:'600px',margin:'40px auto',display:'block'}}/>\n        </div>\n    );\n};","import React from 'react'\nimport {Link} from 'react-router-dom'\nconst Track=(props)=>{\n    const { track }=props;\n    return(\n        <div className=\"col-md-6\">\n            <div className=\"card mb-4 shadow-sm\">\n                <div className=\"card-body\">\n                    <h4><i className=\"fas fa-user\" color=\"red\"></i> {track.artist_name}</h4>\n                    <p className=\"card-text\">\n                        <strong><i className=\"fas fa-play\"></i>Track</strong> : {track.track_name}\n                        <br/>\n                        <strong><i className=\"fas fa-compact-disc\"></i> Album </strong> : {track.album_name}\n                        <br/>\n                    </p>\n                    <Link to={`lyrics/track/${track.track_id}`}\n                    className=\"btn btn-danger btn-block\">View Lyrics</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Track;","import React from 'react';\nimport { Consumer } from '../../Context';\nimport Spinner from '../Layouts/Spinner';\nimport Track from '../tracks/Track';\n\nexport default class Tracks extends React.Component {\n    render(){\n        return(\n           <Consumer>\n               {value =>{\n                   const { track_list,heading }=value;\n                   if(track_list===undefined || track_list.length===0){\n                       return <Spinner/>\n                   }\n                   else{\n                       return(\n                           <React.Fragment>\n                               <h3 className=\"text-center mb-4\">{heading}</h3>\n                             <div className=\"row\">\n                                 {track_list.map(item => (<Track key={item.track.track_id} track={item.track} />))}\n                             </div>\n                           </React.Fragment>\n                           \n                       );\n                   }\n               }}\n           </Consumer>\n        );\n    }\n}","import React from 'react';\nimport Tracks from '../tracks/Tracks';\n\nconst Index=()=>{\n    return(\n        <React.Fragment>\n            <Tracks />\n        </React.Fragment>\n\n    );\n};\nexport default Index;","import React,{Component} from 'react';\nimport axios from 'axios';\nimport Spinner from '../Layouts/Spinner';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\n\nexport default class Lyrics extends Component{\n    state={\n        track:{},\n        lyrics:{}\n    };\n\n    componentDidMount(){\n        axios\n        .get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\n        .then(res => {\n            console.log(res.data);\n            this.setState({lyrics:res.data.message.body.lyrics});          \n            \n            return(\n                axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\n\n            );\n        })\n        .then(res=>{\n            console.log(res.data);\n            this.setState({track:res.data.message.body.track});\n        })\n        .catch(err =>console.log(err));\n\n\n    }\n\n\n\n    render(){\n        const { track, lyrics } = this.state;\n        if(track === undefined || lyrics === undefined || Object.keys(track).length === 0 || Object.keys(lyrics).length === 0)\n        {\n            return <Spinner />;\n        }\n        else{\n            return (\n                <React.Fragment>\n                    <buton><Link to=\"/\" classNAme=\"btn btn-dark btn-sm mb-4\">go back</Link></buton>\n                    <br/>\n                    <div className=\"Card\">\n                        <h5 className=\"card-header\">\n                            {track.track_name} by <span className=\"text-secondary\">{track.artist_name}</span>\n                        </h5>\n                        <div className=\"card-body\">\n                            <p className=\"card-text\">{lyrics.lyrics_body}</p>\n                        </div>\n                    </div>\n\n                    <ul className=\"list-group mt-3\">\n                        <li className=\"list-group-item\">\n                            <strong>Album ID : </strong> {track.album_id}\n                        </li>\n\n                        <li className=\"list-group-item\">\n                            <strong>Song Genre</strong>:{\" \"} {track.primary_genres.music_genre_list.length === 0 ? \"NO GENRE AVAILABLE\" : track.primary_genres.music_genre_list[0].music_genre.music_genre_name}\n                        </li>\n\n                        <li className=\"list-group-item\">\n                            <strong>Release Date</strong>:{' '}\n                                <Moment format=\"MM/DD/YYYY\"> {track.first_release_date}</Moment>\n                        </li>\n\n                    </ul>\n\n\n                </React.Fragment>\n\n            )\n        }\n    }\n};\n\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\nimport Navbar from './Components/Layouts/Navbar';\nimport Index from './Components/Layouts/Index';\nimport Lyrics from './Components/tracks/Lyrics';\nimport {Provider} from './Context';\nimport './App.css';\n\nclass App extends React.Component{\n  render(){\n    return(\n     \n    <Provider>\n      <Router>\n        <React.Fragment>\n          <Navbar />\n          <div className=\"container\">\n          <h8>Made in React JS</h8>\n          <br />\n          <small>Made with ♥ by <a href=\"https://github.com/tamaghno\" target=\"_blank\">Tamaghno Chaudhuri</a></small>\n         <br />\n            <Switch>\n              <Route exact path=\"/\" component={Index} />\n              <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n            </Switch>\n          </div>\n         </React.Fragment>\n      </Router>\n    </Provider>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}